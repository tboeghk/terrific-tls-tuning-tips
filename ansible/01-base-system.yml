---
- name: Request let's encrypt certficates for a domain
  hosts: tls
  become: true
  tasks:
    - name: apply security updates
      shell: yum -y update

    - name: install base software
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - openssl
        - nginx
        - haproxy
        - gcc
        - pcre-devel 
        - openssl-devel

# TODO rpm -i http://dl.fedoraproject.org/pub/epel/6/x86_64/joe-3.7-4.el6.x86_64.rpm
# https://github.com/ssllabs/ssllabs-scan/releases/download/v1.3.0/ssllabs-scan_1.3.0-linux64.tgz
#tar xzvf ssllabs-scan_1.3.0-linux64.tgz 
#   14  chmod +x ssllabs-scan
#   15  mv ssllabs-scan /usr/bin/ssllabs-scan

# wget https://www.openssl.org/source/openssl-1.0.2j.tar.gz
# tar xzvf openssl-1.0.2j.tar.gz 
#   93  cd openssl-1.0.2j
#       export STATICLIBSSL=/opt/libssl
#   94  ./config --prefix=$STATICLIBSSL no-shared
#   95  make
#   96  make test
#   97  make install_sw
#   98  openssl version

#wget http://www.haproxy.org/download/1.6/src/haproxy-1.6.9.tar.gz
#   21  tar -zxvf haproxy-1.6.9.tar.gz 
#   22  cd haproxy-1.6.9
#   23  sudo yum install gcc pcre-devel openssl-devel
#   24  make TARGET=linux2628 USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1 SSL_INC=$STATICLIBSSL/include SSL_LIB=$STATICLIBSSL/lib ADDLIB=-ldl
#   25  make install
# rm /usr/sbin/haproxy
# ln -s /usr/local/sbin/haproxy /usr/sbin/haproxy
# haproxy -vv 


    - name: download certbot installer
      get_url: 
        url: "https://dl.eff.org/certbot-auto"
        dest: "/usr/bin/certbot"
        mode: 0755
    
    - name: create certbot configuration directory
      file:
        name: /etc/letsencrypt
        state: directory
     
    - name: configure certbot
      copy:
        src: letsencrypt/cli.ini
        dest: /etc/letsencrypt/cli.ini
     
    - name: install certbot & friends 
      shell: /usr/bin/certbot --text --version
    
      # nginx
    - name: configure nginx localhost site
      copy:
        src: nginx/localhost.conf
        dest: /etc/nginx/conf.d/localhost.conf

    - name: configure nginx
      copy:
        src: nginx/nginx.conf
        dest: /etc/nginx/nginx.conf
        force: true
        validate: 'nginx -t -c %s'
    
    - name: start nginx
      service:
        name: nginx
        state: restarted
        enabled: true

      # haproxy
    - name: configure haproxy
      copy:
        src: haproxy/simple.cfg
        dest: /etc/haproxy/haproxy.cfg
        force: true
        validate: 'haproxy -c -f %s'
    
    - name: start haproxy
      service:
        name: haproxy
        state: restarted
        enabled: true